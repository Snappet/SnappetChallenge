var SnappetChallenge;(function(n){var t;(function(t){var i=function(){function i(){this.init=function(i,r){var u=new t.ClassWorkVM(i.dateTimeProvider,i.apiClient,i.dateRangeFilterBuilder,i.dateAliasConverter,r),f=new n.TemplateForm("classWork",u);return new n.CatalogInitResponse("classWork","#/class-work/today","Class work",[new n.Route("#/class-work/:date",f)])}}return i}();if(t.ClassWorkCatalog=i,n.catalogRegistry)n.catalogRegistry.registerCatalog(new i);else throw new Error("CatalogRegistry service must be declared before any self registring catalogs.");})(t=n.LearningObjectives||(n.LearningObjectives={}))})(SnappetChallenge||(SnappetChallenge={})),function(n){var t;(function(t){var u=n.Models.UserCard,f=function(){function t(t,r,u,f,e){var o=this;this.learningObjectives=ko.observableArray([]);this.loading=ko.observable(!1);this.initialized=ko.observable(!1);this.calendar=new n.CalendarVM(t);this.init=function(n){o.initialized(!1);var t=f.getDateFromAlias(n.date);o.calendar.date(t);o.clear();o.loadData(t);o.initialized(!0)};this.clear=function(){o.learningObjectives([])};this.loadData=function(n){var t=u.getFilterForDate(n);o.loading(!0);r.getLearningObjectives(t,function(t){n.getTime()===o.calendar.date().getTime()&&o.learningObjectives(t.map(function(n){return new i(n,f.getDateAlias(o.calendar.date()))}))}).always(function(){return o.loading(!1)})};this.calendar.date.subscribe(function(n){if(o.initialized()){var t=f.getDateAlias(n);e.setLocation("#/class-work/"+t)}})}return t}(),i,r;t.ClassWorkVM=f;i=function(){function n(n,t){var i=this;this.name=ko.observable();this.domain=ko.observable();this.subject=ko.observable();this.averageProgress=ko.observable();this.users=ko.observableArray([]);this.expanded=ko.observable(!1);this.setData=function(n){i.name(n.name);i.domain(n.domain);i.subject(n.subject);i.averageProgress(n.averageProgress);i.users(n.users.map(function(n){return new r(n,t)}))};this.toggle=function(){i.expanded(!i.expanded())};this.setData(n)}return n}();t.LearningObjectiveListItemVM=i;r=function(){function n(n,t){var i=this;this.userId=ko.observable();this.name=ko.observable();this.overallProgress=ko.observable();this.imageId=ko.observable();this.setData=function(n){i.userId(n.userId);i.name(n.name);i.imageId(n.imageId);i.overallProgress(n.overallProgress)};this.userCardData=ko.computed(function(){return new u(i.userId(),i.name(),i.overallProgress(),"/image/"+i.imageId(),t)});this.setData(n)}return n}();t.UserForLearningObjectivListItemVM=r})(t=n.LearningObjectives||(n.LearningObjectives={}))}(SnappetChallenge||(SnappetChallenge={}));