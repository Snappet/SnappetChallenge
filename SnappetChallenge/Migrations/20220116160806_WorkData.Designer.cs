// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SnappetChallenge.Data;

#nullable disable

namespace SnappetChallenge.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220116160806_WorkData")]
    partial class WorkData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SnappetChallenge.AggregateModels.DailyWorkModel", b =>
                {
                    b.Property<string>("Subject")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Domain")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LearningObjective")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double?>("AvgProgress")
                        .HasColumnType("float");

                    b.Property<int>("Correct0")
                        .HasColumnType("int");

                    b.Property<int>("Correct1")
                        .HasColumnType("int");

                    b.Property<int>("Correct3")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Subject", "Domain", "LearningObjective");

                    b.ToTable("DailyWorkModel", t => t.ExcludeFromMigrations());

                    b.HasDiscriminator<string>("Discriminator").HasValue("DailyWorkModel");
                });

            modelBuilder.Entity("SnappetChallenge.AggregateModels.DayCompareToAllModel", b =>
                {
                    b.Property<string>("Subject")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Domain")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LearningObjective")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double?>("AvgProgressForAll")
                        .HasColumnType("float");

                    b.Property<double?>("AvgProgressForDay")
                        .HasColumnType("float");

                    b.Property<double?>("ProgressChange")
                        .HasColumnType("float");

                    b.HasKey("Subject", "Domain", "LearningObjective");

                    b.ToTable("DayCompareToAllModel", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("SnappetChallenge.AggregateModels.DayCompareToLastWeekModel", b =>
                {
                    b.Property<string>("Subject")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Domain")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LearningObjective")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double?>("AvgProgressForDay")
                        .HasColumnType("float");

                    b.Property<double?>("AvgProgressForLastWeek")
                        .HasColumnType("float");

                    b.Property<double?>("ProgressChange")
                        .HasColumnType("float");

                    b.HasKey("Subject", "Domain", "LearningObjective");

                    b.ToTable("DayCompareToLastWeekModel", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("SnappetChallenge.Models.WorkDataModel", b =>
                {
                    b.Property<int>("SubmittedAnswerId")
                        .HasColumnType("int");

                    b.Property<int>("Correct")
                        .HasColumnType("int");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("LearningObjective")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("SubmitDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SubmittedAnswerId");

                    b.ToTable("WorkData");
                });

            modelBuilder.Entity("SnappetChallenge.AggregateModels.SummaryDataModel", b =>
                {
                    b.HasBaseType("SnappetChallenge.AggregateModels.DailyWorkModel");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProgressLessThan0")
                        .HasColumnType("int");

                    b.Property<int>("ProgressOverThan0")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("SummaryDataModel");

                    b.HasAnnotation("Relational:IsTableExcludedFromMigrations", true);
                });
#pragma warning restore 612, 618
        }
    }
}
