service: snappet-challenge

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  buckets:
    answers: ${self:service}-answers
    client-app: ${self:service}-client-app
  tables:
    answers: ${self:service}-answers
  apiGatewayCaching:
    enabled: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-api-gateway-caching
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs18.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    ANSWERS_BUCKET: ${self:custom.buckets.answers}
    ANSWERS_TABLE: ${self:custom.tables.answers}
    ANSWERS_FILE_KEY: work.json

functions:
  readAnswers:
    handler: src/read/answers.main
    caching:
      enabled: false
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:Query
        Resource: !GetAtt AnswersTable.Arn
    events:
      - http:
          method: get
          path: answers
          cors: true
          caching:
            enabled: true
            cacheKeyParameters:
              - name: request.querystring.date

  createAnswers:
    handler: src/create/answers.main
    timeout: 300
    memorySize: 5120
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt AnswersTable.Arn
      - Effect: "Allow"
        Action:
          - s3:GetObject
        Resource: arn:aws:s3:::${self:custom.buckets.answers}/*
    events:
      - s3:
          bucket:
            Fn::Join:
              - ""
              - - Ref: "ApiGatewayRestApi"
                - "-"
                - ${self:custom.buckets.answers}
          event: s3:ObjectCreated:*
          rules:
            - suffix:
                - .json

resources:
  Resources:
    ClientApp:
      Type: AWS::S3::Bucket
      Properties:
        BucketName:
          Fn::Join:
            - ""
            - - Ref: "ApiGatewayRestApi"
              - "-"
              - ${self:custom.buckets.client-app}
        WebsiteConfiguration: 
          IndexDocument: index.html
          ErrorDocument: index.html
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false

    ClientAppPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref ClientApp
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: "ApiGatewayRestApi"
                    - "-"
                    - ${self:custom.buckets.client-app}
                    - "/*"
    AnswersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tables.answers}
        AttributeDefinitions:
          - AttributeName: yyyy-mm-dd
            AttributeType: S
          - AttributeName: SubmitDateTime
            AttributeType: S
        KeySchema:
          - AttributeName: yyyy-mm-dd
            KeyType: HASH
          - AttributeName: SubmitDateTime
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
  Outputs:
    WebsiteURL:
      Value: !GetAtt
        - ClientApp
        - WebsiteURL
      Description: URL for website hosted on S3